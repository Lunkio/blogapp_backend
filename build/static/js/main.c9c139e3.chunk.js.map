{"version":3,"sources":["services/blogs.js","services/login.js","reducers/notificationReducer.js","reducers/userReducer.js","components/LoginForm.js","reducers/blogReducer.js","components/CreateForm.js","components/BlogsForm.js","services/users.js","components/Users.js","components/User.js","components/SingleBlog.js","App.js","store.js","index.js"],"names":["baseUrl","token","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","this","arguments","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","post","_x","addComment","_ref3","_callee3","id","comment","_context3","concat","_x2","_x3","remove","_ref4","_callee4","_context4","delete","_x4","services_blogs","update","_ref5","_callee5","object","_context5","put","_x5","_x6","setToken","newToken","services_login","login","credentials","setNotification","content","duration","dispatch","type","setTimeout","notificationReducer","state","length","undefined","action","addUser","user","userReducer","mapDispatchToProps","connect","notifications","blogs","props","handleLogin","event","username","password","preventDefault","target","value","loginService","window","localStorage","setItem","JSON","stringify","blogService","t0","react_default","createElement","Container","style","marginTop","Form","onSubmit","Field","name","placeholder","Button","primary","blogReducer","toConsumableArray","likedBlog","map","blog","commentedBlog","blogId","filter","addBlog","newBlog","_objectSpread","users","title","author","url","_useState","useState","_useState2","slicedToArray","blogFormVisible","setBlogFormVisible","hideWhenVisible","display","showWhenVisible","sort","b","likes","onClick","components_CreateForm","negative","Table","celled","striped","selectable","Header","Row","HeaderCell","Body","key","Cell","Link","to","services_users","Users","definition","className","User","console","log","numberOfBlogs","basic","color","size","animated","history","push","Content","visible","hidden","Icon","fontStyle","addLike","updatedBlog","removeBlog","compose","withRouter","fontSize","as","labelPosition","Label","pointing","marginLeft","confirm","newComment","List","comments","index","Item","initializeBlogs","removeUser","setUsers","_useState3","_useState4","activeItem","setActiveItem","useEffect","usersService","then","allUsers","loggedUserJSON","getItem","parse","react_router_dom","Message","Menu","secondary","marginBottom","active","position","removeItem","react_router","exact","path","render","components_BlogsForm","components_Users","match","components_User","params","find","components_SingleBlog","components_LoginForm","reducer","combineReducers","store","createStore","applyMiddleware","thunk","renderApp","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.c9c139e3.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst addComment = async (id, comment) => {\r\n  const response = await axios.post(`${baseUrl}/${id}/comments`, { comment })\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, object) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, object)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, update, remove, setToken, addComment }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    //console.log('credentials', credentials)\r\n    const response = await axios.post(baseUrl, credentials)\r\n    //console.log('response.data', response.data)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","const notificationReducer = (state = '', action) => {\r\n    switch(action.type) {\r\n        case 'NEW':\r\n            return action.data\r\n        case 'HIDE':\r\n            return state = ''\r\n        case 'TEST':\r\n            return action.data\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setNotification = (content, duration) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'NEW',\r\n            data: content\r\n        })\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: 'HIDE'\r\n            })\r\n        }, duration * 1000)\r\n    }\r\n}\r\n\r\nexport const test = (content) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'TEST',\r\n            data: content\r\n        })\r\n    }\r\n}\r\n\r\nexport default notificationReducer","const userReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_USER':\r\n            return action.user\r\n        case 'REMOVE_USER':\r\n            return action.data\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const addUser = (user) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'ADD_USER',\r\n            user\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeUser = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'REMOVE_USER',\r\n            data: null\r\n        })\r\n    }\r\n}\r\n\r\nexport default userReducer","import React from 'react'\r\nimport blogService from '../services/blogs'\r\nimport loginService from '../services/login'\r\nimport { Form, Button, Container } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { addUser } from '../reducers/userReducer'\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const handleLogin = async (event) => {\r\n      event.preventDefault()\r\n  \r\n      let username = event.target.username.value\r\n      let password = event.target.password.value\r\n      try {\r\n        const user = await loginService.login({\r\n        username, password\r\n      })\r\n\r\n        window.localStorage.setItem(\r\n        'loggedUser', JSON.stringify(user)\r\n      )\r\n\r\n        blogService.setToken(user.token)\r\n        props.addUser(user)\r\n\r\n      } catch (exception) {\r\n          props.setNotification('wrong username or password', 5)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container style={{'marginTop': '2rem'}}>\r\n        <h2>Log in to application</h2>\r\n        <Form onSubmit={handleLogin}>\r\n            <Form.Field>                  \r\n              <label>Username</label>\r\n              <input id='idUsername' type='text' name='username' placeholder='Username' />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>Password</label>\r\n              <input id ='idPassword' type='password' name='password' placeholder='Password' />\r\n            </Form.Field>\r\n            <Button primary type=\"submit\">Login</Button>      \r\n        </Form>\r\n      </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      notifications: state.notifications,\r\n      blogs: state.blogs,\r\n      user: state.user\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = {\r\n    setNotification,\r\n    addUser\r\n  }\r\n  \r\n  export default connect( \r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(LoginForm)","import blogService from '../services/blogs'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'INIT_BLOGS':\r\n            return action.data\r\n        case 'ADD':\r\n            return [...state, action.data]\r\n        case 'LIKE':\r\n            const likedBlog = action.data\r\n            const id = action.data.id\r\n            return state.map(blog => blog.id !== id ? blog : likedBlog)\r\n        case 'COMMENT':\r\n            const commentedBlog = action.data\r\n            const blogId = action.data.id\r\n            return state.map(blog => blog.id !== blogId ? blog : commentedBlog)\r\n        case 'REMOVE':\r\n            return state.filter(blog => blog.id !== action.id)\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport const addBlog = (blog, user) => {\r\n    return async dispatch => {\r\n        let newBlog = await blogService.create(blog)\r\n        newBlog = { ...newBlog, user: user }\r\n        dispatch({\r\n            type: 'ADD',\r\n            data: newBlog\r\n        })\r\n    }\r\n}\r\n\r\nexport const addLike = (id, blog) => {\r\n    return async dispatch => {\r\n        const likedBlog = { ...blog, likes: blog.likes + 1 }\r\n        const updatedBlog = await blogService.update(id, likedBlog)\r\n        dispatch({\r\n            type: 'LIKE',\r\n            data: updatedBlog\r\n        })\r\n    }\r\n}\r\n\r\nexport const addComment = (id, comment) => {\r\n    return async dispatch => {\r\n        const updatedBlog = await blogService.addComment(id, comment)\r\n        dispatch({\r\n            type: 'COMMENT',\r\n            data: updatedBlog\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeBlog = (id, token) => {\r\n    return async dispatch => {\r\n        blogService.setToken(token)\r\n        await blogService.remove(id)\r\n        dispatch({\r\n            type: 'REMOVE',\r\n            id\r\n        })\r\n    }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n    return async dispatch => {\r\n        const blogs = await blogService.getAll()\r\n        dispatch({\r\n            type: 'INIT_BLOGS',\r\n            data: blogs\r\n        })\r\n    }\r\n}\r\n\r\nexport default blogReducer","import React from 'react'\r\nimport blogService from '../services/blogs'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { addBlog } from '../reducers/blogReducer'\r\n\r\nconst CreateForm = (props) => {\r\n\r\n  blogService.setToken(props.user.token)\r\n\r\n  const handleBlogCreation = (event) => {\r\n    event.preventDefault()\r\n\r\n    const title = event.target.title.value\r\n    const author = event.target.author.value\r\n    const url = event.target.url.value\r\n    const newBlog = {\r\n      title: title,\r\n      author: author,\r\n      url: url\r\n    }\r\n    const user = props.user\r\n\r\n    props.addBlog(newBlog, user)\r\n\r\n    event.target.title.value = ''\r\n    event.target.author.value = ''\r\n    event.target.url.value = ''\r\n\r\n    props.setNotification(`a new blog ${newBlog.title} by ${newBlog.author} added`, 5)\r\n  }\r\n  \r\n  return (\r\n      <Form onSubmit={handleBlogCreation}>\r\n        <Form.Field>\r\n          <label>Title:</label>\r\n          <input id='idTitle' name=\"title\" placeholder='Title' />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Author:</label>\r\n          <input id='idAuthor' name=\"author\" placeholder='Author' />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Url:</label>\r\n          <input id='idUrl' name=\"url\" placeholder='Url' />\r\n        </Form.Field>\r\n        <Button primary id='idButton' type=\"submit\">Add new blog</Button>\r\n      </Form> \r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notifications: state.notifications,\r\n    users: state.users,\r\n    blogs: state.blogs\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addBlog,\r\n  setNotification\r\n}\r\n\r\nexport default connect( \r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateForm)","import React, { useState } from 'react'\r\nimport CreateForm from './CreateForm'\r\nimport { connect } from 'react-redux'\r\nimport { Table, Button } from 'semantic-ui-react'\r\n\r\nconst BlogsForm = (props) => {\r\n    const [blogFormVisible, setBlogFormVisible] = useState(false)\r\n    \r\n    const hideWhenVisible = { display: blogFormVisible ? 'none' : '' }\r\n    const showWhenVisible = { display: blogFormVisible ? '' : 'none' }\r\n\r\n    //sort blogs by likes:\r\n    props.blogs.sort((a,b) => a.likes-b.likes)\r\n\r\n    return (\r\n        <div>\r\n            <div style={hideWhenVisible}>\r\n                <h1>Welcome to Blog App</h1>\r\n                <p>Here you can add your own blogs, or read other people's blog posts</p>\r\n                <Button primary onClick={() => setBlogFormVisible(true)}>Create new blog</Button>\r\n            </div>\r\n\r\n            <div style={showWhenVisible}>\r\n                <h2>Create new</h2>\r\n                <CreateForm blogs={props.blogs} user={props.user} />\r\n                <Button style={{'marginTop': '1rem'}} negative onClick={() => setBlogFormVisible(false)}>Cancel</Button>\r\n                <br/>\r\n            </div>\r\n            <h3>Blogs:</h3>\r\n            <Table celled striped selectable>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Title</Table.HeaderCell>\r\n                        <Table.HeaderCell>Author</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    {props.blogs.map(blog =>\r\n                        <Table.Row key={blog.id}>\r\n                            <Table.Cell><props.Link to={`/blogs/${blog.id}`}>{blog.title}</props.Link></Table.Cell>\r\n                            <Table.Cell>{blog.author}</Table.Cell>\r\n                        </Table.Row>\r\n                    )}\r\n                </Table.Body>\r\n            </Table>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      notifications: state.notifications,\r\n      blogs: state.blogs,\r\n      user: state.user\r\n    }\r\n  }\r\n  \r\n  export default connect( \r\n    mapStateToProps\r\n  )(BlogsForm)","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll }","import React from 'react'\r\nimport { Table } from 'semantic-ui-react'\r\n\r\nconst Users = (props) => {\r\n    return (\r\n        <div>\r\n            <Table definition>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Users</Table.HeaderCell>\r\n                        <Table.HeaderCell>Blogs created</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {props.users.map(user =>\r\n                        <Table.Row key={user.id}>\r\n                            <Table.Cell>\r\n                                <props.Link className='classTest' to={`/users/${user.id}`}>{user.name}</props.Link>\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                {user.blogs.length}\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                    )}\r\n                </Table.Body>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport { Button, Icon } from 'semantic-ui-react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst User = (props) => {\r\n    \r\n    if (props.user === undefined) {\r\n        return null\r\n    }\r\n\r\n    console.log(props.user)\r\n\r\n    const numberOfBlogs = props.user.blogs.map(blog => blog.title)\r\n\r\n    return (\r\n        <div>\r\n            <Button basic color='blue' size='mini' animated onClick={() => props.history.push('/users')}>\r\n                <Button.Content visible>Go back</Button.Content>\r\n                <Button.Content hidden>\r\n                    <Icon name='arrow left'/>\r\n                </Button.Content>\r\n            </Button>\r\n            <h2>{props.user.name}</h2>\r\n            <p><b>Added Blogs:</b></p>\r\n            <ul>\r\n                {props.user.blogs.map(blog =>\r\n                    <li key={blog.id}>{blog.title}</li>    \r\n                )}\r\n            </ul>\r\n            {numberOfBlogs.length < 1 && <div style={{'fontStyle': 'italic'}}>No added blogs</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User\r\n// export default withRouter(User)","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Button, Form, Icon, Label, List } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport { addLike, addComment, removeBlog } from '../reducers/blogReducer'\r\nimport { compose } from 'redux'\r\n\r\nconst SingleBlog = (props) => {\r\n\r\n    if (props.blog === undefined) {\r\n        return null\r\n    }\r\n\r\n    if (props.blog.user === undefined || props.blog.user === null) {\r\n        props.blog.user = {name: '\"no user added this blog\"'}\r\n    }\r\n    //console.log(props.blog)\r\n    \r\n    const addLike = (blog) => {\r\n        const id = blog.id\r\n        props.addLike(id, blog)\r\n    }\r\n    \r\n    const removeBlog = (blog) => {\r\n        //console.log(blog)\r\n        const id = blog.id\r\n        const confirm = window.confirm(`remove blog ${blog.title} by ${blog.author}`)\r\n\r\n        if (confirm) {\r\n            props.removeBlog(id, props.user.token)\r\n            props.history.push('/')\r\n            //console.log('blogi poistettu onnistuneesti')\r\n        } else {\r\n            //console.log('blogia ei poistettu')\r\n            return\r\n        }\r\n    }\r\n\r\n    //näyttää remove-napin jos kirjautunut käyttäjä on blogin lisääjä\r\n    const checkUser = (blog) => {\r\n        if (blog.user.name === props.user.name) {\r\n            return {display: '', 'marginLeft': '1rem'}\r\n        } else {\r\n            return {display: 'none'}\r\n        }\r\n    }\r\n\r\n    const handleComment = (event) => {\r\n        event.preventDefault()\r\n\r\n        const comment = event.target.newComment.value\r\n\r\n        props.addComment(props.blog.id, comment)\r\n\r\n        event.target.newComment.value = ''\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button basic color='blue' size='mini' animated onClick={() => props.history.push('/')}>\r\n                <Button.Content visible>Go back</Button.Content>\r\n                <Button.Content hidden>\r\n                    <Icon name='arrow left'/>\r\n                </Button.Content>\r\n            </Button>\r\n            <h2>{props.blog.title}, <span style={{'fontSize': '1rem'}}>author:</span> {props.blog.author}</h2>\r\n            <p style={{'fontStyle': 'italic'}}>{props.blog.url}</p>\r\n            <Button as='div' labelPosition='right'>\r\n                <Button basic color='blue' onClick={() => addLike(props.blog)}>\r\n                    <Icon name='heart'/>\r\n                    Like\r\n                </Button>\r\n                <Label as='a' basic color='blue' pointing='left'>\r\n                    {props.blog.likes}\r\n                </Label>\r\n            </Button>\r\n            <p style={{'marginTop': '2rem'}}>\r\n                added by {props.blog.user.name}\r\n                <span style={checkUser(props.blog)}>\r\n                    <Button basic color='red' onClick={() => removeBlog(props.blog)}>Remove</Button>\r\n                </span>\r\n            </p>\r\n            <div>\r\n                <hr />\r\n                <h3>Comments</h3>\r\n                <Form onSubmit={handleComment}>\r\n                    <input name='newComment' placeholder='Write comments'/><Button primary type='submit'>Add Comment</Button>\r\n                </Form>\r\n                <List>\r\n                    {props.blog.comments.map((comment, index) =>\r\n                        <List.Item key={index}>\r\n                            <List.Icon name='users' />\r\n                            <List.Content>{comment}</List.Content>\r\n                        </List.Item>\r\n                    )}\r\n                </List>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        blogs: state.blogs\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = {\r\n    addLike,\r\n    addComment,\r\n    removeBlog\r\n    }\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(SingleBlog)","import React, { useState, useEffect } from 'react'\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogsForm from './components/BlogsForm'\r\nimport usersService from './services/users'\r\nimport Users from './components/Users'\r\nimport User from './components/User'\r\nimport SingleBlog from './components/SingleBlog'\r\nimport { connect } from 'react-redux'\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { setNotification } from './reducers/notificationReducer'\r\nimport { addUser, removeUser } from './reducers/userReducer'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route, Link\r\n} from 'react-router-dom'\r\nimport { Container, Message, Menu, Button } from 'semantic-ui-react'\r\n\r\nconst App = (props) => {\r\n  const [users, setUsers] = useState([])\r\n  const [activeItem, setActiveItem] = useState('blogs')\r\n\r\n  useEffect(() => {\r\n      usersService.getAll()\r\n          .then(allUsers => {\r\n              setUsers(allUsers)\r\n          })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    props.initializeBlogs()\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      props.addUser(user)\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedUser')\r\n    props.removeUser()\r\n  }\r\n\r\n  const userById = (id) => {\r\n    let foundUser = users.find(user => user.id === id)\r\n    return foundUser\r\n  }\r\n\r\n  const blogById = (id) => {\r\n    let foundBlog = props.blogs.find(blog => blog.id === id)\r\n    return foundBlog\r\n  }\r\n\r\n  const loggedInUser = () => {\r\n    return (\r\n      <span>{props.user.name} logged in <Button basic color='red' onClick={() => handleLogout()}>Logout</Button></span>\r\n    )\r\n  }\r\n\r\n  if (!(props.user)) {\r\n    return (\r\n      <div>\r\n        {(props.notifications && <Message>{props.notifications}</Message>)}\r\n        <LoginForm />\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <Router>\r\n          {(props.notifications && <Message>{props.notifications}</Message>)}\r\n          <Menu pointing secondary style={{'marginBottom': '2rem'}}>\r\n            <Menu.Item name='blogs' active={activeItem === 'blogs'} >\r\n              <Link to='/' onClick={() => setActiveItem('blogs')}>Blogs</Link>\r\n            </Menu.Item>\r\n            <Menu.Item name='users' active={activeItem === 'users'} >\r\n              <Link to='/users' onClick={() => setActiveItem('users')}>Users</Link>\r\n            </Menu.Item>\r\n            <Menu.Item position='right'>\r\n              {loggedInUser()}\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div>\r\n            <Route exact path='/' render={() => <BlogsForm Link={Link} />} />\r\n            <Route exact path='/users' render={() => <Users users={users} Link={Link} /> } />\r\n            <Route exact path='/users/:id' render={({ match }) =>\r\n              <User user={userById(match.params.id)}/>\r\n            } />\r\n            <Route exact path='/blogs/:id' render={({ match }) =>\r\n              <SingleBlog blog={blogById(match.params.id)} />\r\n            } />\r\n          </div>\r\n        </Router>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notifications: state.notifications,\r\n    blogs: state.blogs,\r\n    user: state.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setNotification,\r\n  initializeBlogs,\r\n  addUser,\r\n  removeUser\r\n}\r\n\r\nexport default connect( \r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport blogReducer from './reducers/blogReducer'\r\n\r\nconst reducer = combineReducers({\r\n    notifications: notificationReducer,\r\n    user: userReducer,\r\n    blogs: blogReducer\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\n//console.log(store.getState())\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css'\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n        document.getElementById('root'))\r\n}\r\n\r\nrenderApp()\r\nstore.subscribe(renderApp)"],"sourceRoot":""}