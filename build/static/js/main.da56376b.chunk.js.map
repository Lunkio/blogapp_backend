{"version":3,"sources":["services/blogs.js","services/login.js","reducers/notificationReducer.js","reducers/userReducer.js","components/LoginForm.js","reducers/blogReducer.js","components/CreateForm.js","components/BlogsForm.js","components/Users.js","components/User.js","components/SingleBlog.js","services/users.js","reducers/usersReducer.js","App.js","store.js","index.js"],"names":["baseUrl","token","a","async","axios","get","response","data","newObject","config","headers","Authorization","post","id","object","put","delete","newToken","comment","credentials","setNotification","content","duration","dispatch","type","setTimeout","notificationReducer","state","action","addUser","user","userReducer","mapDispatchToProps","connect","notifications","blogs","props","Container","style","Form","onSubmit","event","preventDefault","username","target","value","password","loginService","window","localStorage","setItem","JSON","stringify","blogService","Field","className","name","placeholder","Button","primary","blogReducer","likedBlog","map","blog","commentedBlog","blogId","filter","addBlog","newBlog","users","title","author","url","useState","blogFormVisible","setBlogFormVisible","hideWhenVisible","display","showWhenVisible","sort","b","likes","onClick","negative","Table","celled","striped","selectable","Header","Row","HeaderCell","Body","key","Cell","to","definition","length","withRouter","undefined","numberOfBlogs","basic","color","size","animated","history","push","Content","visible","hidden","Icon","addLike","updatedBlog","addComment","removeBlog","compose","as","labelPosition","Label","pointing","confirm","newComment","List","comments","index","Item","usersReducer","initializeBlogs","initializeUsers","usersService","removeUser","activeItem","setActiveItem","useEffect","loggedUserJSON","getItem","parse","Message","Menu","secondary","active","position","removeItem","exact","path","render","match","params","find","reducer","combineReducers","store","createStore","applyMiddleware","thunk","renderApp","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.da56376b.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst addComment = async (id, comment) => {\r\n  const response = await axios.post(`${baseUrl}/${id}/comments`, { comment })\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, object) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, object)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, update, remove, setToken, addComment }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    //console.log('credentials', credentials)\r\n    const response = await axios.post(baseUrl, credentials)\r\n    //console.log('response.data', response.data)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","const notificationReducer = (state = '', action) => {\r\n    switch(action.type) {\r\n        case 'NEW':\r\n            return action.data\r\n        case 'HIDE':\r\n            return state = ''\r\n        case 'TEST':\r\n            return action.data\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setNotification = (content, duration) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'NEW',\r\n            data: content\r\n        })\r\n        setTimeout(() => {\r\n            dispatch({\r\n                type: 'HIDE'\r\n            })\r\n        }, duration * 1000)\r\n    }\r\n}\r\n\r\nexport const test = (content) => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: 'TEST',\r\n            data: content\r\n        })\r\n    }\r\n}\r\n\r\nexport default notificationReducer","const userReducer = (state = null, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_USER':\r\n            return action.user\r\n        case 'REMOVE_USER':\r\n            return action.data\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const addUser = (user) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'ADD_USER',\r\n            user\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeUser = () => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'REMOVE_USER',\r\n            data: null\r\n        })\r\n    }\r\n}\r\n\r\nexport default userReducer","import React from 'react'\r\nimport blogService from '../services/blogs'\r\nimport loginService from '../services/login'\r\nimport { Form, Button, Container } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { addUser } from '../reducers/userReducer'\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    const handleLogin = async (event) => {\r\n      event.preventDefault()\r\n  \r\n      let username = event.target.username.value\r\n      let password = event.target.password.value\r\n      try {\r\n        const user = await loginService.login({\r\n        username, password\r\n      })\r\n\r\n        window.localStorage.setItem(\r\n        'loggedUser', JSON.stringify(user)\r\n      )\r\n\r\n        blogService.setToken(user.token)\r\n        props.addUser(user)\r\n\r\n      } catch (exception) {\r\n          props.setNotification('wrong username or password', 5)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Container style={{'marginTop': '2rem'}}>\r\n        <h2>Log in to application</h2>\r\n        <Form onSubmit={handleLogin}>\r\n            <Form.Field>                  \r\n              <label className='username'>Username</label>\r\n              <input id='idUsername' type='text' name='username' placeholder='Username' />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label className='password'>Password</label>\r\n              <input id ='idPassword' type='password' name='password' placeholder='Password' />\r\n            </Form.Field>\r\n            <Button className='login-btn' primary type=\"submit\">Login</Button>\r\n            <span style={{'marginLeft': '1rem'}}>Want to try this application? Login with these: username: <strong>test_user</strong>, password: <strong>bigsecret</strong></span>\r\n        </Form>\r\n      </Container>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      notifications: state.notifications,\r\n      blogs: state.blogs,\r\n      user: state.user\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = {\r\n    setNotification,\r\n    addUser\r\n  }\r\n  \r\n  export default connect( \r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(LoginForm)","import blogService from '../services/blogs'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'INIT_BLOGS':\r\n            return action.data\r\n        case 'ADD':\r\n            return [...state, action.data]\r\n        case 'LIKE':\r\n            const likedBlog = action.data\r\n            const id = action.data.id\r\n            return state.map(blog => blog.id !== id ? blog : likedBlog)\r\n        case 'COMMENT':\r\n            const commentedBlog = action.data\r\n            const blogId = action.data.id\r\n            return state.map(blog => blog.id !== blogId ? blog : commentedBlog)\r\n        case 'REMOVE':\r\n            return state.filter(blog => blog.id !== action.id)\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport const addBlog = (blog, user) => {\r\n    return async dispatch => {\r\n        let newBlog = await blogService.create(blog)\r\n        newBlog = { ...newBlog, user: user }\r\n        dispatch({\r\n            type: 'ADD',\r\n            data: newBlog\r\n        })\r\n    }\r\n}\r\n\r\nexport const addLike = (id, blog) => {\r\n    return async dispatch => {\r\n        const likedBlog = { ...blog, likes: blog.likes + 1 }\r\n        const updatedBlog = await blogService.update(id, likedBlog)\r\n        dispatch({\r\n            type: 'LIKE',\r\n            data: updatedBlog\r\n        })\r\n    }\r\n}\r\n\r\nexport const addComment = (id, comment) => {\r\n    return async dispatch => {\r\n        const updatedBlog = await blogService.addComment(id, comment)\r\n        dispatch({\r\n            type: 'COMMENT',\r\n            data: updatedBlog\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeBlog = (id, token) => {\r\n    return async dispatch => {\r\n        blogService.setToken(token)\r\n        await blogService.remove(id)\r\n        dispatch({\r\n            type: 'REMOVE',\r\n            id\r\n        })\r\n    }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n    return async dispatch => {\r\n        const blogs = await blogService.getAll()\r\n        dispatch({\r\n            type: 'INIT_BLOGS',\r\n            data: blogs\r\n        })\r\n    }\r\n}\r\n\r\nexport default blogReducer","import React from 'react'\r\nimport blogService from '../services/blogs'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport { setNotification } from '../reducers/notificationReducer'\r\nimport { addBlog } from '../reducers/blogReducer'\r\n\r\nconst CreateForm = (props) => {\r\n  //console.log('props', props)\r\n\r\n  blogService.setToken(props.user.token)\r\n\r\n  const handleBlogCreation = (event) => {\r\n    event.preventDefault()\r\n\r\n    const title = event.target.title.value\r\n    const author = event.target.author.value\r\n    const url = event.target.url.value\r\n\r\n    if (title === '' || author === '' || url === '') {\r\n      props.setNotification('Please fill in all the fields', 5)\r\n      return\r\n    }\r\n\r\n    const newBlog = {\r\n      title: title,\r\n      author: author,\r\n      url: url\r\n    }\r\n    const user = props.user\r\n\r\n    props.addBlog(newBlog, user)\r\n\r\n    event.target.title.value = ''\r\n    event.target.author.value = ''\r\n    event.target.url.value = ''\r\n\r\n    props.setNotification(`a new blog ${newBlog.title} by ${newBlog.author} added`, 5)\r\n  }\r\n  \r\n  return (\r\n      <Form onSubmit={handleBlogCreation}>\r\n        <Form.Field>\r\n          <label className='title'>Title:</label>\r\n          <input id='idTitle' name=\"title\" placeholder='Title' />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label className='author'>Author:</label>\r\n          <input id='idAuthor' name=\"author\" placeholder='Author' />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label className='url'>Url:</label>\r\n          <input id='idUrl' name=\"url\" placeholder='Url' />\r\n        </Form.Field>\r\n        <Button primary id='idButton' type=\"submit\">Add new blog</Button>\r\n      </Form> \r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notifications: state.notifications,\r\n    users: state.users,\r\n    blogs: state.blogs\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addBlog,\r\n  setNotification\r\n}\r\n\r\nexport default connect( \r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateForm)","import React, { useState } from 'react'\r\nimport CreateForm from './CreateForm'\r\nimport { connect } from 'react-redux'\r\nimport { Table, Button } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst BlogsForm = (props) => {\r\n    //console.log(props)\r\n    const [blogFormVisible, setBlogFormVisible] = useState(false)\r\n    \r\n    const hideWhenVisible = { display: blogFormVisible ? 'none' : '' }\r\n    const showWhenVisible = { display: blogFormVisible ? '' : 'none' }\r\n\r\n    //sort blogs by likes:\r\n    props.blogs.sort((a,b) => a.likes-b.likes)\r\n\r\n    return (\r\n        <div>\r\n            <div style={hideWhenVisible}>\r\n                <h1>Welcome to Blog App</h1>\r\n                <p>Here you can add your own blogs, or read other people's blog posts</p>\r\n                <Button primary className='create-button' onClick={() => setBlogFormVisible(true)}>Create new blog</Button>\r\n            </div>\r\n\r\n            <div style={showWhenVisible}>\r\n                <h2 className='create-new-header'>Create new</h2>\r\n                <CreateForm blogs={props.blogs} user={props.user} />\r\n                <Button style={{'marginTop': '1rem'}} negative onClick={() => setBlogFormVisible(false)}>Close</Button>\r\n                <br/>\r\n            </div>\r\n            <h3>Blogs:</h3>\r\n            <Table celled striped selectable>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Title</Table.HeaderCell>\r\n                        <Table.HeaderCell>Author</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    {props.blogs.map(blog =>\r\n                        <Table.Row key={blog.id}>\r\n                            <Table.Cell><Link to={`/blogs/${blog.id}`} className='blog-title'>{blog.title}</Link></Table.Cell>\r\n                            <Table.Cell><p className='blog-author'>{blog.author}</p></Table.Cell>\r\n                        </Table.Row>\r\n                    )}\r\n                </Table.Body>\r\n            </Table>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      notifications: state.notifications,\r\n      blogs: state.blogs,\r\n      user: state.user\r\n    }\r\n  }\r\n  \r\n  export default connect( \r\n    mapStateToProps\r\n  )(BlogsForm)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Table } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\n \r\nconst Users = (props) => {\r\n    //console.log(props.users)\r\n    return (\r\n        <div>\r\n            <Table definition>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Users</Table.HeaderCell>\r\n                        <Table.HeaderCell>Blogs created</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {props.users.map(user =>\r\n                        <Table.Row key={user.id}>\r\n                            <Table.Cell>\r\n                                <Link className='user-name' to={`/users/${user.id}`}>{user.name}</Link>\r\n                            </Table.Cell>\r\n                            <Table.Cell>\r\n                                <p className='blog-amount-test'>{user.blogs.length}</p>\r\n                            </Table.Cell>\r\n                        </Table.Row>\r\n                    )}\r\n                </Table.Body>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      users: state.users\r\n    }\r\n  }\r\n  \r\n  export default connect( \r\n    mapStateToProps\r\n  )(Users)","import React from 'react'\r\nimport { Button, Icon } from 'semantic-ui-react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst User = (props) => {\r\n    //console.log(props.user)\r\n    if (props.user === undefined) {\r\n        return null\r\n    }\r\n\r\n    const numberOfBlogs = props.user.blogs.map(blog => blog.title)\r\n\r\n    return (\r\n        <div>\r\n            <Button basic color='blue' size='mini' animated onClick={() => props.history.push('/users')}>\r\n                <Button.Content visible>Go back</Button.Content>\r\n                <Button.Content hidden>\r\n                    <Icon name='arrow left'/>\r\n                </Button.Content>\r\n            </Button>\r\n            <h2>{props.user.name}</h2>\r\n            <p style={{'fontWeight': 'bold'}}>Added Blogs:</p>\r\n            <ul>\r\n                {props.user.blogs.map(blog =>\r\n                    <li key={blog.id}>{blog.title}</li>    \r\n                )}\r\n            </ul>\r\n            {numberOfBlogs.length < 1 && <div style={{'fontStyle': 'italic'}}>No added blogs</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(User)","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Button, Form, Icon, Label, List } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport { addLike, addComment, removeBlog } from '../reducers/blogReducer'\r\nimport { compose } from 'redux'\r\n\r\nconst SingleBlog = (props) => {\r\n    //console.log('props.blog', props.blog)\r\n    //console.log('props.user', props.user)\r\n\r\n    if (props.blog === undefined) {\r\n        return null\r\n    }\r\n\r\n    if (props.blog.user === undefined || props.blog.user === null) {\r\n        props.blog.user = {name: '\"no user added this blog\"'}\r\n    }\r\n    //console.log(props.blog)\r\n    \r\n    const addLike = (blog) => {\r\n        const id = blog.id\r\n        props.addLike(id, blog)\r\n    }\r\n    \r\n    const removeBlog = (blog) => {\r\n        //console.log(blog)\r\n        const id = blog.id\r\n        const confirm = window.confirm(`remove blog ${blog.title} by ${blog.author}`)\r\n\r\n        if (confirm) {\r\n            props.removeBlog(id, props.user.token)\r\n            props.history.push('/')\r\n            //console.log('blogi poistettu onnistuneesti')\r\n        } else {\r\n            //console.log('blogia ei poistettu')\r\n            return\r\n        }\r\n    }\r\n\r\n    //näyttää remove-napin jos kirjautunut käyttäjä on blogin lisääjä\r\n    const checkUser = (blog) => {\r\n        if (blog.user.name === props.user.name) {\r\n            return {display: '', 'marginLeft': '1rem'}\r\n        } else {\r\n            return {display: 'none'}\r\n        }\r\n    }\r\n\r\n    const handleComment = (event) => {\r\n        event.preventDefault()\r\n\r\n        const comment = event.target.newComment.value\r\n        props.addComment(props.blog.id, comment)\r\n        event.target.newComment.value = ''\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button basic color='blue' size='mini' animated onClick={() => props.history.push('/')}>\r\n                <Button.Content visible>Go back</Button.Content>\r\n                <Button.Content hidden>\r\n                    <Icon name='arrow left'/>\r\n                </Button.Content>\r\n            </Button>\r\n            <h2>{props.blog.title}, <span style={{'fontSize': '1rem'}}>author:</span> {props.blog.author}</h2>\r\n            <p style={{'fontStyle': 'italic'}}>{props.blog.url}</p>\r\n            <Button as='div' labelPosition='right'>\r\n                <Button basic color='blue' onClick={() => addLike(props.blog)}>\r\n                    <Icon name='heart'/>\r\n                    Like\r\n                </Button>\r\n                <Label as='a' basic color='blue' pointing='left'>\r\n                    {props.blog.likes}\r\n                </Label>\r\n            </Button>\r\n            <p style={{'marginTop': '2rem'}}>\r\n                added by {props.blog.user.name}\r\n                <span style={checkUser(props.blog)}>\r\n                    <Button className='remove-button' basic color='red' onClick={() => removeBlog(props.blog)}>Remove</Button>\r\n                </span>\r\n            </p>\r\n            <div>\r\n                <hr />\r\n                <h3>Comments</h3>\r\n                <Form onSubmit={handleComment}>\r\n                    <input name='newComment' placeholder='Write comments'/><Button primary type='submit'>Add Comment</Button>\r\n                </Form>\r\n                <List>\r\n                    {props.blog.comments.map((comment, index) =>\r\n                        <List.Item key={index}>\r\n                            <List.Icon name='users' />\r\n                            <List.Content className='comment'>{comment}</List.Content>\r\n                        </List.Item>\r\n                    )}\r\n                </List>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        blogs: state.blogs\r\n    }\r\n}\r\n  \r\nconst mapDispatchToProps = {\r\n    addLike,\r\n    addComment,\r\n    removeBlog\r\n}\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(SingleBlog)","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll }","import usersService from '../services/users'\r\n\r\nconst usersReducer = (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'INIT_USERS':\r\n            return action.data\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const initializeUsers = () => {\r\n    return async dispatch => {\r\n        const users = await usersService.getAll()\r\n        dispatch({\r\n            type: 'INIT_USERS',\r\n            data: users\r\n        })\r\n    }\r\n}\r\n\r\nexport default usersReducer","import React, { useState, useEffect } from 'react'\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogsForm from './components/BlogsForm'\r\n// import usersService from './services/users'\r\nimport Users from './components/Users'\r\nimport User from './components/User'\r\nimport SingleBlog from './components/SingleBlog'\r\nimport { connect } from 'react-redux'\r\nimport { initializeBlogs } from './reducers/blogReducer'\r\nimport { initializeUsers } from './reducers/usersReducer'\r\nimport { setNotification } from './reducers/notificationReducer'\r\nimport { addUser, removeUser } from './reducers/userReducer'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route, Link\r\n} from 'react-router-dom'\r\nimport { Container, Message, Menu, Button } from 'semantic-ui-react'\r\n\r\nconst App = (props) => {\r\n  // const [users, setUsers] = useState([])\r\n  const [activeItem, setActiveItem] = useState('blogs')\r\n\r\n  // useEffect(() => {\r\n  //     usersService.getAll()\r\n  //         .then(allUsers => {\r\n  //             setUsers(allUsers)\r\n  //         })\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    props.initializeBlogs()\r\n    props.initializeUsers()\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      props.addUser(user)\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedUser')\r\n    props.removeUser()\r\n  }\r\n\r\n  const userById = (id) => {\r\n    let foundUser = props.users.find(user => user.id === id)\r\n    return foundUser\r\n  }\r\n\r\n  // const userById = (id) => {\r\n  //   let foundUser = users.find(user => user.id === id)\r\n  //   return foundUser\r\n  // }\r\n\r\n  const blogById = (id) => {\r\n    let foundBlog = props.blogs.find(blog => blog.id === id)\r\n    return foundBlog\r\n  }\r\n\r\n  const loggedInUser = () => {\r\n    return (\r\n      <span>{props.user.name} logged in <Button basic color='red' onClick={() => handleLogout()}>Logout</Button></span>\r\n    )\r\n  }\r\n\r\n  if (!(props.user)) {\r\n    return (\r\n      <div>\r\n        {(props.notifications && <Message>{props.notifications}</Message>)}\r\n        <LoginForm />\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <Router>\r\n          {(props.notifications && <Message>{props.notifications}</Message>)}\r\n          <Menu pointing secondary style={{'marginBottom': '2rem'}}>\r\n            <Menu.Item name='blogs' active={activeItem === 'blogs'} >\r\n              <Link to='/' onClick={() => setActiveItem('blogs')}>Blogs</Link>\r\n            </Menu.Item>\r\n            <Menu.Item name='users' active={activeItem === 'users'} >\r\n              <Link to='/users' onClick={() => setActiveItem('users')}>Users</Link>\r\n            </Menu.Item>\r\n            <Menu.Item position='right'>\r\n              {loggedInUser()}\r\n            </Menu.Item>\r\n          </Menu>\r\n          <div>\r\n            <Route exact path='/' render={() => <BlogsForm />} />\r\n            <Route exact path='/users' render={() => <Users /> } />\r\n            {/* <Route exact path='/users' render={() => <Users users={users} /> } /> */}\r\n            <Route exact path='/users/:id' render={({ match }) =>\r\n              <User user={userById(match.params.id)}/>\r\n            } />\r\n            <Route exact path='/blogs/:id' render={({ match }) =>\r\n              <SingleBlog blog={blogById(match.params.id)} />\r\n            } />\r\n          </div>\r\n        </Router>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    notifications: state.notifications,\r\n    blogs: state.blogs,\r\n    user: state.user,\r\n    users: state.users\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setNotification,\r\n  initializeBlogs,\r\n  initializeUsers,\r\n  addUser,\r\n  removeUser\r\n}\r\n\r\nexport default connect( \r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App)","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport blogReducer from './reducers/blogReducer'\r\nimport usersReducer from './reducers/usersReducer'\r\n\r\nconst reducer = combineReducers({\r\n    notifications: notificationReducer,\r\n    user: userReducer,\r\n    blogs: blogReducer,\r\n    users: usersReducer\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\n//console.log(store.getState())\r\n\r\nexport default store","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport './index.css'\r\n\r\nconst renderApp = () => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>,\r\n        document.getElementById('root'))\r\n}\r\n\r\nrenderApp()\r\nstore.subscribe(renderApp)"],"sourceRoot":""}